extends layout

block content
    -
        function degToCard(value) {
            value = parseFloat(value); if (value <= 11.25) return 'N'; value -= 11.25; 
            var allDirections = ['NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW', 'N']; 
            var dIndex = parseInt(value/22.5); 
            return allDirections[dIndex] ? allDirections[dIndex] : 'N'; 
        }
    if error
        .alert.alert-danger(role="alert") #{error}
    else
        .row
            .col-sm-auto.weather.border.border-warning.rounded.p-3.bg-darker
                h1.display-5.title.animate__animated.animate__bounce Weather Forecast
                h2.display-6.capitalize 
                    if weather.current.weather[0].description === "clear sky"
                        +icon("bi-sun")
                    else if weather.current.weather[0].description === "light rain"
                        +icon("bi-cloud-drizzle")
                    else if weather.current.weather[0].description === "broken clouds" || weather.current.weather[0].description === "scattered clouds"
                        +icon("bi-cloud-haze")
                    else if weather.current.weather[0].description === "overcast clouds"
                        +icon("bi-clouds")
                    else if weather.current.weather[0].description === "heavy intensity rain"
                        +icon("bi-cloud-rain-heavy")
                    |  #{weather.current.weather[0].description} 
                - var temp = weather.current.temp;
                h1.display-6
                    +tempColor(temp)  #{temp}°F (Feels: #{weather.current.feels_like}°F)
                h3.display-6
                    +icon("bi-cloud-rain")
                    |  Rain: #{weather.hourly[0].pop * 100}%
                h3.display-6 
                    +icon("bi-moisture")
                    |  #{weather.current.humidity}% Humidity
                h4.display-6 
                    +icon("bi-wind")
                    |  #{weather.current.wind_speed} mph #{degToCard(weather.current.wind_deg)}
                -
                    var date = new Date(Math.round(weather.current.sunset) * 1000).toLocaleString('en-US', {timeZone: weather.timezone});
                    var string = date.substr(date.lastIndexOf(",") + 1);
                h3.display-6 
                    +icon("bi-sunset")
                    |  Sunset: #{string}
            .col-sm.weather.border.border-info.rounded.p-3.bg-darker
                h1.display-4 Next 12 Hours
                - var counter = 0;
                .overflow-auto
                    table.table.table-hover.table-dark
                        thead
                            th(scope="col") Time
                            th(scope="col") Temp
                            th(scope="col") Rain
                            th(scope="col") Wind
                            th(scope="col") Humidity
                        tbody
                            each hour in weather.hourly
                                if counter === 0
                                    - counter++;
                                else if counter < 13
                                    tr
                                        - var time = new Date(Math.round(hour.dt) * 1000).toLocaleString('en-US', {timeZone: weather.timezone, timeStyle: "short"});
                                        th(scope="row") #{time}
                                        th(scope="row") #{hour.temp}°F
                                        th(scope="row") #{hour.pop * 100}%
                                        th(scope="row") #{hour.wind_speed} MPH #{degToCard(hour.wind_deg)}
                                        th(scope="row") #{hour.humidity}%
                                    - counter++;
            .border.border-danger.my-3.p-3.rounded.bg-darker.traffic
                h1 Traffic Conditions
                span.text-secondary A traffic heat map for your current area
                br
                br
                #map
                - var lat = weather.lat;
                - var lon = weather.lon;
                script.
                    function initMap() {
                        const map = new google.maps.Map(document.getElementById("map"), {
                            zoom: 13,
                            center: { lat: #{lat}, lng: #{lon} },
                            mapTypeControl: true,
                            mapTypeControlOptions: {
                                style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
                            },
                            streetViewControl: true,
                            streetViewControlOptions: {
                                position: google.maps.ControlPosition.LEFT_BOTTOM,
                            }
                        });
                        const trafficLayer = new google.maps.TrafficLayer();
                        trafficLayer.setMap(map);
                    }
        include windChillChart.pug